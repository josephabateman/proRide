{"ast":null,"code":"var _jsxFileName = \"/Users/josephbateman/Dropbox/My Mac (Josephs-MacBook-Pro.local)/Desktop/proride/src/components/Services/Services.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport servicesData from \"../../data/services\";\nimport ContentTemplate from \"../ContentTemplate\";\nimport { Card, CardGroup, Container, Row, Col, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ServicesCards() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(CardGroup, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: servicesData.map((service, key) => /*#__PURE__*/_jsxDEV(Col, {\n            lg: 4,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"full-screen-info\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                variant: \"top\",\n                src: \"http://www.gatewaycycling.org.uk/wp-content/uploads/2016/04/GC-25062016-0005.jpg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                className: key % 2 == 0 ? \"blue-gradient\" : \"green-gradient\",\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: service.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: service.header\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-primary\",\n                  children: /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: \"More info\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 43,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this)\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ServicesCards;\n\nfunction Services() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Example, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Services;\n\nfunction ShowSpecificService() {\n  _s();\n\n  // Declare a new state variable, which we'll call \"count\"\n  const [serviceCards, clickedService] = useState( /*#__PURE__*/_jsxDEV(ServicesCards, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 51\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [serviceCards, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => clickedService( /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"selectedService\",\n          children: /*#__PURE__*/_jsxDEV(ContentTemplate, {\n            header: servicesData[0].name,\n            header2: servicesData[0].header2,\n            description: servicesData[0].description,\n            flyer: servicesData[0].flyer,\n            flyer2: servicesData[0].flyer2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this)\n      }, void 0, false))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShowSpecificService, \"vNUbB4Ps0I/XJCA3tAgbP9zyFbo=\");\n\n_c3 = ShowSpecificService;\n{\n  /* <button\n   onClick={() =>\n     allServices(\n       <>\n         <ServicesCards />\n         {document.getElementById(\"selectedService\").remove()}\n       </>\n     )\n   }\n  >\n   Back to all services\n  </button>; */\n}\nexport default Services;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ServicesCards\");\n$RefreshReg$(_c2, \"Services\");\n$RefreshReg$(_c3, \"ShowSpecificService\");","map":{"version":3,"sources":["/Users/josephbateman/Dropbox/My Mac (Josephs-MacBook-Pro.local)/Desktop/proride/src/components/Services/Services.jsx"],"names":["React","useState","servicesData","ContentTemplate","Card","CardGroup","Container","Row","Col","Button","ServicesCards","map","service","key","name","header","Services","ShowSpecificService","serviceCards","clickedService","header2","description","flyer","flyer2"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport servicesData from \"../../data/services\";\nimport ContentTemplate from \"../ContentTemplate\";\nimport { Card, CardGroup, Container, Row, Col, Button } from \"react-bootstrap\";\n\nfunction ServicesCards() {\n  return (\n    <div>\n      {/* <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"#home\">Services</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            {servicesData.map((service, key) => (\n              <Nav.Link className=\"d-inline\" key={key} href=\"#home\">\n                {service.name}\n              </Nav.Link>\n            ))}\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar> */}\n\n      <Container fluid>\n        <CardGroup>\n          <Row>\n            {servicesData.map((service, key) => (\n              <Col lg={4} sm={6} key={key}>\n                <Card className=\"full-screen-info\">\n                  <Card.Img\n                    variant=\"top\"\n                    src=\"http://www.gatewaycycling.org.uk/wp-content/uploads/2016/04/GC-25062016-0005.jpg\"\n                  />\n                  <Card.Body\n                    className={\n                      key % 2 == 0 ? \"blue-gradient\" : \"green-gradient\"\n                    }\n                  >\n                    <Card.Title>{service.name}</Card.Title>\n                    <Card.Text>{service.header}</Card.Text>\n                  </Card.Body>\n                  <Card.Footer>\n                    <Button variant=\"outline-primary\">\n                      <small>More info</small>\n                    </Button>\n                  </Card.Footer>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        </CardGroup>\n      </Container>\n    </div>\n  );\n}\n\nfunction Services() {\n  return (\n    <div>\n      <Example />\n    </div>\n  );\n}\n\nfunction ShowSpecificService() {\n  // Declare a new state variable, which we'll call \"count\"\n  const [serviceCards, clickedService] = useState(<ServicesCards />);\n\n  return (\n    <div>\n      {serviceCards}\n      <button\n        onClick={() =>\n          clickedService(\n            <>\n              <div id=\"selectedService\">\n                <ContentTemplate\n                  header={servicesData[0].name}\n                  header2={servicesData[0].header2}\n                  description={servicesData[0].description}\n                  flyer={servicesData[0].flyer}\n                  flyer2={servicesData[0].flyer2}\n                />\n              </div>\n            </>\n          )\n        }\n      ></button>\n    </div>\n  );\n}\n\n{/* <button\n  onClick={() =>\n    allServices(\n      <>\n        <ServicesCards />\n        {document.getElementById(\"selectedService\").remove()}\n      </>\n    )\n  }\n>\n  Back to all services\n</button>; */}\n\nexport default Services;\n"]},"metadata":{},"sourceType":"module"}